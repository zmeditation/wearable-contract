/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Initializable,
  ERC721InitializableInterface,
} from "../ERC721Initializable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061128d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806306fdde03146100dc578063081812fc146100f1578063095ea7b31461011c57806323b872dd1461013157806342842e0e146101445780636352211e1461015757806370a082311461016a57806395d89b411461018b578063a22cb46514610193578063b88d4fde146101a6578063c87b56dd146101b9578063e985e9c5146101cc575b600080fd5b6100c76100c2366004610f85565b6101df565b60405190151581526020015b60405180910390f35b6100e4610231565b6040516100d3919061106d565b6101046100ff366004610fbd565b6102c3565b6040516001600160a01b0390911681526020016100d3565b61012f61012a366004610f5c565b610350565b005b61012f61013f366004610e13565b610473565b61012f610152366004610e13565b6104ab565b610104610165366004610fbd565b6104c6565b61017d610178366004610dc7565b61053d565b6040519081526020016100d3565b6100e46105c4565b61012f6101a1366004610f22565b6105d3565b61012f6101b4366004610e4e565b6105e9565b6100e46101c7366004610fbd565b610628565b6100c76101da366004610de1565b610700565b60006001600160e01b031982166380ac58cd60e01b148061021057506001600160e01b03198216635b5e139f60e01b145b8061022b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461024090611192565b80601f016020809104026020016040519081016040528092919081815260200182805461026c90611192565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102ce8261072e565b6103345760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035b826104c6565b9050806001600160a01b0316836001600160a01b031614156103c95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161032b565b806001600160a01b03166103db61074b565b6001600160a01b031614806103f757506103f7816101da61074b565b6104645760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161032b565b61046e83836107a8565b505050565b61048461047e61074b565b82610816565b6104a05760405162461bcd60e51b815260040161032b906110d2565b61046e8383836108e0565b61046e838383604051806020016040528060008152506105e9565b6000818152600260205260408120546001600160a01b03168061022b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161032b565b60006001600160a01b0382166105a85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161032b565b506001600160a01b031660009081526003602052604090205490565b60606001805461024090611192565b6105e56105de61074b565b8383610a80565b5050565b6105fa6105f461074b565b83610816565b6106165760405162461bcd60e51b815260040161032b906110d2565b61062284848484610b4b565b50505050565b60606106338261072e565b6106975760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161032b565b60006106ae60408051602081019091526000815290565b905060008151116106ce57604051806020016040528060008152506106f9565b806106d884610b7e565b6040516020016106e9929190611001565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b6000333014156107a257600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506107a59050565b50335b90565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107dd826104c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108218261072e565b6108825760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161032b565b600061088d836104c6565b9050806001600160a01b0316846001600160a01b031614806108c85750836001600160a01b03166108bd846102c3565b6001600160a01b0316145b806108d857506108d88185610700565b949350505050565b826001600160a01b03166108f3826104c6565b6001600160a01b03161461095b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161032b565b6001600160a01b0382166109bd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161032b565b6109c86000826107a8565b6001600160a01b03831660009081526003602052604081208054600192906109f190849061114f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a1f908490611123565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610ade5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161032b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b568484846108e0565b610b6284848484610c97565b6106225760405162461bcd60e51b815260040161032b90611080565b606081610ba25750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bcc5780610bb6816111cd565b9150610bc59050600a8361113b565b9150610ba6565b6000816001600160401b03811115610bf457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c1e576020820181803683370190505b5090505b84156108d857610c3360018361114f565b9150610c40600a866111e8565b610c4b906030611123565b60f81b818381518110610c6e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c90600a8661113b565b9450610c22565b60006001600160a01b0384163b15610da057836001600160a01b031663150b7a02610cc061074b565b8786866040518563ffffffff1660e01b8152600401610ce29493929190611030565b602060405180830381600087803b158015610cfc57600080fd5b505af1925050508015610d2c575060408051601f3d908101601f19168201909252610d2991810190610fa1565b60015b610d86573d808015610d5a576040519150601f19603f3d011682016040523d82523d6000602084013e610d5f565b606091505b508051610d7e5760405162461bcd60e51b815260040161032b90611080565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108d8565b506001949350505050565b80356001600160a01b0381168114610dc257600080fd5b919050565b600060208284031215610dd8578081fd5b6106f982610dab565b60008060408385031215610df3578081fd5b610dfc83610dab565b9150610e0a60208401610dab565b90509250929050565b600080600060608486031215610e27578081fd5b610e3084610dab565b9250610e3e60208501610dab565b9150604084013590509250925092565b60008060008060808587031215610e63578081fd5b610e6c85610dab565b9350610e7a60208601610dab565b92506040850135915060608501356001600160401b0380821115610e9c578283fd5b818701915087601f830112610eaf578283fd5b813581811115610ec157610ec1611228565b604051601f8201601f19908116603f01168101908382118183101715610ee957610ee9611228565b816040528281528a6020848701011115610f01578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610f34578182fd5b610f3d83610dab565b915060208301358015158114610f51578182fd5b809150509250929050565b60008060408385031215610f6e578182fd5b610f7783610dab565b946020939093013593505050565b600060208284031215610f96578081fd5b81356106f98161123e565b600060208284031215610fb2578081fd5b81516106f98161123e565b600060208284031215610fce578081fd5b5035919050565b60008151808452610fed816020860160208601611166565b601f01601f19169290920160200192915050565b60008351611013818460208801611166565b835190830190611027818360208801611166565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061106390830184610fd5565b9695505050505050565b6020815260006106f96020830184610fd5565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611136576111366111fc565b500190565b60008261114a5761114a611212565b500490565b600082821015611161576111616111fc565b500390565b60005b83811015611181578181015183820152602001611169565b838111156106225750506000910152565b600181811c908216806111a657607f821691505b602082108114156111c757634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156111e1576111e16111fc565b5060010190565b6000826111f7576111f7611212565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461125457600080fd5b5056fea26469706673582212200a5574c1e4af615961fca307f8c60186a93a89decb4d966a242b32f72198328c64736f6c63430008040033";

export class ERC721Initializable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Initializable> {
    return super.deploy(overrides || {}) as Promise<ERC721Initializable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Initializable {
    return super.attach(address) as ERC721Initializable;
  }
  connect(signer: Signer): ERC721Initializable__factory {
    return super.connect(signer) as ERC721Initializable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721InitializableInterface {
    return new utils.Interface(_abi) as ERC721InitializableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Initializable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Initializable;
  }
}
