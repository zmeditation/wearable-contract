/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleForwarder,
  SimpleForwarderInterface,
} from "../SimpleForwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "forwardCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106a53803806106a583398101604081905261002f9161017a565b600080546001600160a01b03191633908117825560405190918291600080516020610685833981519152908290a3506100678161006d565b506101a8565b6000546001600160a01b031633146100cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100c3565b600080546040516001600160a01b038085169392169160008051602061068583398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561018b578081fd5b81516001600160a01b03811681146101a1578182fd5b9392505050565b6104ce806101b76000396000f3fe60806040526004361061003f5760003560e01c806322bee49414610044578063715018a61461006d5780638da5cb5b14610084578063f2fde38b146100b1575b600080fd5b610057610052366004610363565b6100d1565b60405161006491906103f0565b60405180910390f35b34801561007957600080fd5b506100826101da565b005b34801561009057600080fd5b50610099610241565b6040516001600160a01b039091168152602001610064565b3480156100bd57600080fd5b506100826100cc366004610349565b610250565b6060336100dc610241565b6001600160a01b03161461010b5760405162461bcd60e51b815260040161010290610443565b60405180910390fd5b600080856001600160a01b03163486866040516101299291906103e0565b60006040518083038185875af1925050503d8060008114610166576040519150601f19603f3d011682016040523d82523d6000602084013e61016b565b606091505b5091509150811561017f5791506101d39050565b80511561018f5780518082602001fd5b60405162461bcd60e51b815260206004820152601960248201527821a0a6262fa320a4a622a22faba4aa242fa727afa2a92927a960391b6044820152606401610102565b9392505050565b336101e3610241565b6001600160a01b0316146102095760405162461bcd60e51b815260040161010290610443565b600080546040516001600160a01b0390911690600080516020610479833981519152908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b33610259610241565b6001600160a01b03161461027f5760405162461bcd60e51b815260040161010290610443565b6001600160a01b0381166102e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610102565b600080546040516001600160a01b038085169392169160008051602061047983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461034457600080fd5b919050565b60006020828403121561035a578081fd5b6101d38261032d565b600080600060408486031215610377578182fd5b6103808461032d565b925060208401356001600160401b038082111561039b578384fd5b818601915086601f8301126103ae578384fd5b8135818111156103bc578485fd5b8760208285010111156103cd578485fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b6000602080835283518082850152825b8181101561041c57858101830151858201604001528201610400565b8181111561042d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212201d7c25b40494d4194b7ae1ddd5726a45df5cb1d53e642fba0b0a3ffdbc7d3a1b64736f6c634300080400338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class SimpleForwarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleForwarder> {
    return super.deploy(_owner, overrides || {}) as Promise<SimpleForwarder>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): SimpleForwarder {
    return super.attach(address) as SimpleForwarder;
  }
  connect(signer: Signer): SimpleForwarder__factory {
    return super.connect(signer) as SimpleForwarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleForwarderInterface {
    return new utils.Interface(_abi) as SimpleForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleForwarder {
    return new Contract(address, _abi, signerOrProvider) as SimpleForwarder;
  }
}
