/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Committee, CommitteeInterface } from "../Committee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "MemberSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICollectionManager",
        name: "_collectionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_data",
        type: "bytes[]",
      },
    ],
    name: "manageCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_values",
        type: "bool[]",
      },
    ],
    name: "setMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014d3380380620014d38339810160408190526200003491620003e4565b620000946040518060400160405280601c81526020017f556e696369616c20436f6c6c656374696f6e20436f6d6d697474656500000000815250604051806040016040528060018152602001603160f81b8152506200010f60201b60201c565b6200009e620001a0565b620000a982620001e7565b60005b81518110156200010657620000f1828281518110620000db57634e487b7160e01b600052603260045260246000fd5b602002602001015160016200030560201b60201c565b80620000fd81620004cf565b915050620000ac565b5050506200050d565b6040518060800160405280604f815260200162001464604f9139805190602001208280519060200120828051906020012030620001516200036460201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f1981840301815291905280516020909101206001555050565b6000620001ac62000368565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620014b3833981519152908290a350565b620001f162000368565b6000546001600160a01b03908116911614620002545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620002bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200024b565b600080546040516001600160a01b0380851693921691600080516020620014b383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f4efc5168d98ad88d2d4784344a20876aea2fa3e8aa503b5fb3164a09019ca3d6910160405180910390a25050565b4690565b600033301415620003c157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620003c49050565b50335b90565b80516001600160a01b0381168114620003df57600080fd5b919050565b60008060408385031215620003f7578182fd5b6200040283620003c7565b602084810151919350906001600160401b038082111562000421578384fd5b818601915086601f83011262000435578384fd5b8151818111156200044a576200044a620004f7565b8060051b604051601f19603f83011681018181108582111715620004725762000472620004f7565b604052828152858101935084860182860187018b101562000491578788fd5b8795505b83861015620004be57620004a981620003c7565b85526001959095019493860193860162000495565b508096505050505050509250929050565b6000600019821415620004f057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610f47806200051d6000396000f3fe6080604052600436106100815760003560e01c806308ae4b0c146100865780630c53c51c146100cb57806329352b27146100eb5780632d0335ab1461010d5780633408e47014610151578063715018a61461016457806381c9308e146101795780638da5cb5b14610199578063f2fde38b146101c1578063f698da25146101e1575b600080fd5b34801561009257600080fd5b506100b66100a1366004610ac9565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100de6100d9366004610ae5565b6101f7565b6040516100c29190610d8f565b3480156100f757600080fd5b5061010b610106366004610b5f565b610413565b005b34801561011957600080fd5b50610143610128366004610ac9565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100c2565b34801561015d57600080fd5b5046610143565b34801561017057600080fd5b5061010b61053b565b34801561018557600080fd5b5061010b610194366004610be7565b6105a8565b3480156101a557600080fd5b506000546040516001600160a01b0390911681526020016100c2565b3480156101cd57600080fd5b5061010b6101dc366004610ac9565b6106dd565b3480156101ed57600080fd5b5061014360015481565b60408051606081810183526001600160a01b0388166000818152600260209081529085902054845283015291810186905261023587828787876107c0565b6102ac5760405162461bcd60e51b815260206004820152603d60248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60448201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d4154434800000060648201526084015b60405180910390fd5b6001600160a01b0387166000908152600260205260409020546102d090600161089f565b6001600160a01b0388166000908152600260205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061032090899033908a90610d5a565b60405180910390a1600080306001600160a01b031634898b604051602001610349929190610d28565b60408051601f198184030181529082905261036391610d0c565b60006040518083038185875af1925050503d80600081146103a0576040519150601f19603f3d011682016040523d82523d6000602084013e6103a5565b606091505b5091509150816104075760405162461bcd60e51b815260206004820152602760248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60448201526617d1905253115160ca1b60648201526084016102a3565b98975050505050505050565b61041b6108b2565b6000546001600160a01b039081169116146104485760405162461bcd60e51b81526004016102a390610da2565b8281146104a55760405162461bcd60e51b815260206004820152602560248201527f436f6d6d6974746565237365744d656d626572733a204c454e4754485f4d495360448201526409a82a886960db1b60648201526084016102a3565b60005b83811015610534576105228585838181106104d357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104e89190610ac9565b84848481811061050857634e487b7160e01b600052603260045260246000fd5b905060200201602081019061051d9190610bc7565b61090f565b8061052c81610e4f565b9150506104a8565b5050505050565b6105436108b2565b6000546001600160a01b039081169116146105705760405162461bcd60e51b81526004016102a390610da2565b600080546040516001600160a01b0390911690600080516020610ef2833981519152908390a3600080546001600160a01b0319169055565b600360006105b46108b2565b6001600160a01b0316815260208101919091526040016000205460ff166106355760405162461bcd60e51b815260206004820152602f60248201527f436f6d6d6974746565236d616e616765436f6c6c656374696f6e3a20554e415560448201526e2a2427a924ad22a22fa9a2a72222a960891b60648201526084016102a3565b60005b815181101561053457846001600160a01b0316631e5a92c1858585858151811061067257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161069893929190610d5a565b600060405180830381600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b5050505080806106d590610e4f565b915050610638565b6106e56108b2565b6000546001600160a01b039081169116146107125760405162461bcd60e51b81526004016102a390610da2565b6001600160a01b0381166107775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a3565b600080546040516001600160a01b0380851693921691600080516020610ef283398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0386166108155760405162461bcd60e51b815260206004820152601a6024820152792726aa11bb32b934b33c9d1024a72b20a624a22fa9a4a3a722a960311b60448201526064016102a3565b60016108286108238761096e565b6109eb565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610876573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b60006108ab8284610e07565b9392505050565b60003330141561090957600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061090c9050565b50335b90565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f4efc5168d98ad88d2d4784344a20876aea2fa3e8aa503b5fb3164a09019ca3d6910160405180910390a25050565b6000604051806080016040528060438152602001610eaf60439139805160209182012083518483015160408087015180519086012090516109ce950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60015460405161190160f01b60208201526022810191909152604281018290526000906062016109ce565b60008083601f840112610a27578182fd5b5081356001600160401b03811115610a3d578182fd5b6020830191508360208260051b8501011115610a5857600080fd5b9250929050565b600082601f830112610a6f578081fd5b81356001600160401b03811115610a8857610a88610e80565b610a9b601f8201601f1916602001610dd7565b818152846020838601011115610aaf578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610ada578081fd5b81356108ab81610e96565b600080600080600060a08688031215610afc578081fd5b8535610b0781610e96565b945060208601356001600160401b03811115610b21578182fd5b610b2d88828901610a5f565b9450506040860135925060608601359150608086013560ff81168114610b51578182fd5b809150509295509295909350565b60008060008060408587031215610b74578384fd5b84356001600160401b0380821115610b8a578586fd5b610b9688838901610a16565b90965094506020870135915080821115610bae578384fd5b50610bbb87828801610a16565b95989497509550505050565b600060208284031215610bd8578081fd5b813580151581146108ab578182fd5b60008060008060808587031215610bfc578384fd5b8435610c0781610e96565b9350602085810135610c1881610e96565b93506040860135610c2881610e96565b925060608601356001600160401b0380821115610c43578384fd5b818801915088601f830112610c56578384fd5b813581811115610c6857610c68610e80565b8060051b610c77858201610dd7565b8281528581019085870183870188018e1015610c91578889fd5b8893505b84841015610cce57803586811115610cab57898afd5b610cb98f8a838b0101610a5f565b84525060019390930192918701918701610c95565b50999c989b5096995050505050505050565b60008151808452610cf8816020860160208601610e1f565b601f01601f19169290920160200192915050565b60008251610d1e818460208701610e1f565b9190910192915050565b60008351610d3a818460208801610e1f565b60609390931b6001600160601b0319169190920190815260140192915050565b6001600160a01b03848116825283166020820152606060408201819052600090610d8690830184610ce0565b95945050505050565b6020815260006108ab6020830184610ce0565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715610dff57610dff610e80565b604052919050565b60008219821115610e1a57610e1a610e6a565b500190565b60005b83811015610e3a578181015183820152602001610e22565b83811115610e49576000848401525b50505050565b6000600019821415610e6357610e63610e6a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610eab57600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122071c5b2579abab15e3c17a22969a3e6bbd45efb7240705450d2f4a8f463a61cda64736f6c63430008040033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c74298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class Committee__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _members: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Committee> {
    return super.deploy(
      _owner,
      _members,
      overrides || {}
    ) as Promise<Committee>;
  }
  getDeployTransaction(
    _owner: string,
    _members: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _members, overrides || {});
  }
  attach(address: string): Committee {
    return super.attach(address) as Committee;
  }
  connect(signer: Signer): Committee__factory {
    return super.connect(signer) as Committee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitteeInterface {
    return new utils.Interface(_abi) as CommitteeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Committee {
    return new Contract(address, _abi, signerOrProvider) as Committee;
  }
}
