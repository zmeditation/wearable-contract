/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinimalProxyFactory,
  MinimalProxyFactoryInterface,
} from "../MinimalProxyFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_codeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "ImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "code",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "codeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161076638038061076683398101604081905261002f9161027d565b6100388161003e565b506103de565b6001600160a01b0381161580159061006d575061006d816001600160a01b03166101d560201b6101e91760201c565b6100e35760405162461bcd60e51b815260206004820152603e60248201527f4d696e696d616c50726f7879466163746f7279235f736574496d706c656d656e60448201527f746174696f6e3a20494e56414c49445f494d504c454d454e544154494f4e0000606482015260840160405180910390fd5b6040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208201526001600160601b0319606083901b1660348201526e5af43d82803e903d91602b57fd5bf360881b60488201526057016040516020818303038152906040526001908051906020019061015f9291906101e4565b50600160405161016f91906102ab565b6040519081900381206002819055600080546001600160a01b0319166001600160a01b038516908117909155917f7acba6e3c47815c1b41b230650f7ed720d66bdc6ca45468c4a6cdb9425132024916101ca9160019061031a565b60405180910390a250565b6001600160a01b03163b151590565b8280546101f0906103a3565b90600052602060002090601f0160209004810192826102125760008555610258565b82601f1061022b57805160ff1916838001178555610258565b82800160010185558215610258579182015b8281111561025857825182559160200191906001019061023d565b50610264929150610268565b5090565b5b808211156102645760008155600101610269565b60006020828403121561028e578081fd5b81516001600160a01b03811681146102a4578182fd5b9392505050565b60008083546102b9816103a3565b600182811680156102d157600181146102e25761030e565b60ff1984168752828701945061030e565b8786526020808720875b858110156103055781548a8201529084019082016102ec565b50505082870194505b50929695505050505050565b82815260006020604081840152818454610333816103a3565b8060408701526060600180841660008114610355576001811461036957610394565b60ff19851689840152608089019550610394565b898852868820885b8581101561038c5781548b8201860152908301908801610371565b8a0184019650505b50939998505050505050505050565b600181811c908216806103b757607f821691505b602082108114156103d857634e487b7160e01b600052602260045260246000fd5b50919050565b610379806103ed6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806318edaaf21461005157806324c12bf61461006d5780635c60da1b14610082578063af222399146100ad575b600080fd5b61005a60025481565b6040519081526020015b60405180910390f35b6100756100c0565b60405161006491906102b5565b600054610095906001600160a01b031681565b6040516001600160a01b039091168152602001610064565b6100956100bb3660046101f8565b61014e565b600180546100cd90610308565b80601f01602080910402602001604051908101604052809291908181526020018280546100f990610308565b80156101465780601f1061011b57610100808354040283529160200191610146565b820191906000526020600020905b81548152906001019060200180831161012957829003601f168201915b505050505081565b600060ff60f81b308686868660405160200161016d9493929190610286565b604051602081830303815290604052805190602001206002546040516020016101c894939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f19818403018152919052805160209091012095945050505050565b6001600160a01b03163b151590565b6000806000806060858703121561020d578384fd5b8435935060208501356001600160a01b038116811461022a578384fd5b925060408501356001600160401b0380821115610245578384fd5b818701915087601f830112610258578384fd5b813581811115610266578485fd5b886020828501011115610277578485fd5b95989497505060200194505050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6000602080835283518082850152825b818110156102e1578581018301518582016040015282016102c5565b818111156102f25783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061031c57607f821691505b6020821081141561033d57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ec242ede9daf62999da4c5a9cd43ac2dc70680befd9b34ba65bd99db8831638a64736f6c63430008040033";

export class MinimalProxyFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalProxyFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<MinimalProxyFactory>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): MinimalProxyFactory {
    return super.attach(address) as MinimalProxyFactory;
  }
  connect(signer: Signer): MinimalProxyFactory__factory {
    return super.connect(signer) as MinimalProxyFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalProxyFactoryInterface {
    return new utils.Interface(_abi) as MinimalProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as MinimalProxyFactory;
  }
}
