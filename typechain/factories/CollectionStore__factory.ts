/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CollectionStore,
  CollectionStoreInterface,
} from "../CollectionStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_acceptedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721Collection",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "prices",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "beneficiaries",
            type: "address[]",
          },
        ],
        indexed: false,
        internalType: "struct CollectionStore.ItemToBuy[]",
        name: "_itemsToBuy",
        type: "tuple[]",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "SetFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldFeeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newFeeOwner",
        type: "address",
      },
    ],
    name: "SetFeeOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721Collection",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "prices",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "beneficiaries",
            type: "address[]",
          },
        ],
        internalType: "struct CollectionStore.ItemToBuy[]",
        name: "_itemsToBuy",
        type: "tuple[]",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721Collection",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getItemBuyData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFeeOwner",
        type: "address",
      },
    ],
    name: "setFeeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e8f38038062001e8f833981016040819052620000349162000466565b620000946040518060400160405280601881526020017f556e696369616c20436f6c6c656374696f6e2053746f72650000000000000000815250604051806040016040528060018152602001603160f81b815250620000ee60201b60201c565b6200009e6200017f565b600380546001600160a01b038086166001600160a01b0319928316179092556005805492851692909116919091179055620000d981620001c6565b620000e48462000318565b505050506200050d565b6040518060800160405280604f815260200162001e20604f9139805190602001208280519060200120828051906020012030620001306200040360201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f1981840301815291905280516020909101206001555050565b60006200018b62000407565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062001e6f833981519152908290a350565b620001d062000407565b6000546001600160a01b03908116911614620002095760405162461bcd60e51b81526004016200020090620004bf565b60405180910390fd5b620f42408110620002835760405162461bcd60e51b815260206004820152603960248201527f436f6c6c656374696f6e53746f7265237365744665653a204645455f53484f5560448201527f4c445f42455f4c4f5745525f5448414e5f424153455f46454500000000000000606482015260840162000200565b600454811415620002d75760405162461bcd60e51b815260206004820181905260248201527f436f6c6c656374696f6e53746f7265237365744665653a2053414d455f464545604482015260640162000200565b60045460408051918252602082018390527f032dc6a2d839eb179729a55633fdf1c41a1fc4739394154117005db2b354b9b5910160405180910390a1600455565b6200032262000407565b6000546001600160a01b03908116911614620003525760405162461bcd60e51b81526004016200020090620004bf565b6001600160a01b038116620003b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000200565b600080546040516001600160a01b038085169392169160008051602062001e6f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b4690565b6000333014156200046057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620004639050565b50335b90565b600080600080608085870312156200047c578384fd5b84516200048981620004f4565b60208601519094506200049c81620004f4565b6040860151909350620004af81620004f4565b6060959095015193969295505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03811681146200050a57600080fd5b50565b611903806200051d6000396000f3fe6080604052600436106100b85760003560e01c80630c53c51c146100bd5780632d0335ab146100e65780633408e4701461012a5780633d18651e1461013d578063451c3d80146101545780634b104eff1461018c57806369fe0e2d146101ae578063715018a6146101ce5780638da5cb5b146101e3578063a4fdc78a14610201578063b9818be114610221578063ddca3f4314610241578063e0f307c214610257578063f2fde38b14610294578063f698da25146102b4575b600080fd5b6100d06100cb366004611167565b6102ca565b6040516100dd9190611683565b60405180910390f35b3480156100f257600080fd5b5061011c61010136600461114b565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100dd565b34801561013657600080fd5b504661011c565b34801561014957600080fd5b5061011c620f424081565b34801561016057600080fd5b50600354610174906001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b34801561019857600080fd5b506101ac6101a736600461114b565b6104e6565b005b3480156101ba57600080fd5b506101ac6101c936600461144b565b610654565b3480156101da57600080fd5b506101ac610790565b3480156101ef57600080fd5b506000546001600160a01b0316610174565b34801561020d57600080fd5b506101ac61021c366004611211565b6107fd565b34801561022d57600080fd5b50600554610174906001600160a01b031681565b34801561024d57600080fd5b5061011c60045481565b34801561026357600080fd5b5061027761027236600461136c565b610c72565b604080519283526001600160a01b039091166020830152016100dd565b3480156102a057600080fd5b506101ac6102af36600461114b565b610d0c565b3480156102c057600080fd5b5061011c60015481565b60408051606081810183526001600160a01b038816600081815260026020908152908590205484528301529181018690526103088782878787610def565b61037f5760405162461bcd60e51b815260206004820152603d60248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60448201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d4154434800000060648201526084015b60405180910390fd5b6001600160a01b0387166000908152600260205260409020546103a3906001610ece565b6001600160a01b0388166000908152600260205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b906103f390899033908a9061154f565b60405180910390a1600080306001600160a01b031634898b60405160200161041c92919061151d565b60408051601f198184030181529082905261043691611501565b60006040518083038185875af1925050503d8060008114610473576040519150601f19603f3d011682016040523d82523d6000602084013e610478565b606091505b5091509150816104da5760405162461bcd60e51b815260206004820152602760248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60448201526617d1905253115160ca1b6064820152608401610376565b98975050505050505050565b6104ee610ee1565b6000546001600160a01b0390811691161461051b5760405162461bcd60e51b815260040161037690611696565b6001600160a01b0381166105865760405162461bcd60e51b815260206004820152602c60248201527f436f6c6c656374696f6e53746f7265237365744665654f776e65723a20494e5660448201526b414c49445f4144445245535360a01b6064820152608401610376565b6005546001600160a01b03828116911614156105f85760405162461bcd60e51b815260206004820152602b60248201527f436f6c6c656374696f6e53746f7265237365744665654f776e65723a2053414d60448201526a22afa322a2afa7aba722a960a91b6064820152608401610376565b6005546040516001600160a01b038084169216907fe0bbf1a07376101b84e5aff236bc710878c9a975168510f821b4a735c0d35e5190600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b61065c610ee1565b6000546001600160a01b039081169116146106895760405162461bcd60e51b815260040161037690611696565b620f424081106106fd5760405162461bcd60e51b815260206004820152603960248201527f436f6c6c656374696f6e53746f7265237365744665653a204645455f53484f556044820152784c445f42455f4c4f5745525f5448414e5f424153455f46454560381b6064820152608401610376565b60045481141561074f5760405162461bcd60e51b815260206004820181905260248201527f436f6c6c656374696f6e53746f7265237365744665653a2053414d455f4645456044820152606401610376565b60045460408051918252602082018390527f032dc6a2d839eb179729a55633fdf1c41a1fc4739394154117005db2b354b9b5910160405180910390a1600455565b610798610ee1565b6000546001600160a01b039081169116146107c55760405162461bcd60e51b815260040161037690611696565b600080546040516001600160a01b03909116906000805160206118ae833981519152908390a3600080546001600160a01b0319169055565b600080610808610ee1565b905060005b8351811015610b4657600084828151811061083857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151805191810151516040820151519193509081146108af5760405162461bcd60e51b8152602060048201526024808201527f436f6c6c656374696f6e53746f7265236275793a204c454e4754485f4d49534d604482015263082a886960e31b6064820152608401610376565b60005b81811015610ac9576000846020015182815181106108e057634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008560400151838151811061091057634e487b7160e01b600052603260045260246000fd5b602002602001015190506000806109278785610c72565b9150915081831461098b5760405162461bcd60e51b815260206004820152602860248201527f436f6c6c656374696f6e53746f7265236275793a204954454d5f50524943455f60448201526709a92a69a82a886960c31b6064820152608401610376565b8115610ab25760006109b5620f42406109af60045486610f3e90919063ffffffff16565b90610f4a565b90506109c18c82610ece565b600354909c506001600160a01b03166323b872dd8c846109e18786610f56565b6040518463ffffffff1660e01b81526004016109ff93929190611584565b602060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a51919061134c565b610ab05760405162461bcd60e51b815260206004820152602a60248201527f436f6c6c656374696f6e53746f7265236275793a205452414e534645525f50526044820152691250d157d1905253115160b21b6064820152608401610376565b505b505050508080610ac19061180b565b9150506108b2565b5060608301516020840151604051637c8f76a160e01b81526001600160a01b03851692637c8f76a192610afe926004016115a8565b600060405180830381600087803b158015610b1857600080fd5b505af1158015610b2c573d6000803e3d6000fd5b505050505050508080610b3e9061180b565b91505061080d565b508115610c36576003546005546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610b86928692909116908790600401611584565b602060405180830381600087803b158015610ba057600080fd5b505af1158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd8919061134c565b610c365760405162461bcd60e51b815260206004820152602960248201527f436f6c6c656374696f6e53746f7265236275793a205452414e534645525f46456044820152681154d7d1905253115160ba1b6064820152608401610376565b7f77cc75f8061aa168906862622e88c5b05a026a9c06c02d91ec98543e01e7ad3383604051610c6591906115cd565b60405180910390a1505050565b600080600080856001600160a01b031663bfb231d2866040518263ffffffff1660e01b8152600401610ca691815260200190565b60006040518083038186803b158015610cbe57600080fd5b505afa158015610cd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cfa9190810190611397565b50919b909a5098505050505050505050565b610d14610ee1565b6000546001600160a01b03908116911614610d415760405162461bcd60e51b815260040161037690611696565b6001600160a01b038116610da65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610376565b600080546040516001600160a01b03808516939216916000805160206118ae83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038616610e445760405162461bcd60e51b815260206004820152601a6024820152792726aa11bb32b934b33c9d1024a72b20a624a22fa9a4a3a722a960311b6044820152606401610376565b6001610e57610e5287610f62565b610fdf565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610ea5573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000610eda828461176d565b9392505050565b600033301415610f3857600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610f3b9050565b50335b90565b6000610eda82846117a5565b6000610eda8284611785565b6000610eda82846117c4565b600060405180608001604052806043815260200161186b6043913980516020918201208351848301516040808701518051908601209051610fc2950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60015460405161190160f01b6020820152602281019190915260428101829052600090606201610fc2565b600082601f83011261101a578081fd5b8135602061102f61102a83611723565b6116f3565b80838252828201915082860187848660051b890101111561104e578586fd5b855b8581101561107557813561106381611852565b84529284019290840190600101611050565b5090979650505050505050565b600082601f830112611092578081fd5b813560206110a261102a83611723565b80838252828201915082860187848660051b89010111156110c1578586fd5b855b85811015611075578135845292840192908401906001016110c3565b80356110ea81611852565b919050565b600082601f8301126110ff578081fd5b815161110d61102a82611746565b818152846020838601011115611121578283fd5b6111328260208301602087016117db565b949350505050565b803560ff811681146110ea57600080fd5b60006020828403121561115c578081fd5b8135610eda81611852565b600080600080600060a0868803121561117e578081fd5b853561118981611852565b945060208601356001600160401b038111156111a3578182fd5b8601601f810188136111b3578182fd5b80356111c161102a82611746565b8181528960208385010111156111d5578384fd5b8160208401602083013790810160200183905294505060408601359250606086013591506112056080870161113a565b90509295509295909350565b60006020808385031215611223578182fd5b82356001600160401b0380821115611239578384fd5b818501915085601f83011261124c578384fd5b813561125a61102a82611723565b80828252858201915085850189878560051b8801011115611279578788fd5b875b8481101561133d5781358681111561129157898afd5b87016080818d03601f190112156112a657898afd5b6112ae6116cb565b6112b98a83016110df565b8152604080830135898111156112cd578c8dfd5b6112db8f8d83870101611082565b8c840152506060830135898111156112f1578c8dfd5b6112ff8f8d83870101611082565b828401525050608082013588811115611316578b8cfd5b6113248e8c8386010161100a565b606083015250855250928701929087019060010161127b565b50909998505050505050505050565b60006020828403121561135d578081fd5b81518015158114610eda578182fd5b6000806040838503121561137e578182fd5b823561138981611852565b946020939093013593505050565b600080600080600080600060e0888a0312156113b1578485fd5b87516001600160401b03808211156113c7578687fd5b6113d38b838c016110ef565b985060208a0151975060408a0151965060608a0151955060808a015191506113fa82611852565b60a08a01519194508082111561140e578384fd5b61141a8b838c016110ef565b935060c08a015191508082111561142f578283fd5b5061143c8a828b016110ef565b91505092959891949750929550565b60006020828403121561145c578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561149b5781516001600160a01b031687529582019590820190600101611476565b509495945050505050565b6000815180845260208085019450808401835b8381101561149b578151875295820195908201906001016114b9565b600081518084526114ed8160208601602086016117db565b601f01601f19169290920160200192915050565b600082516115138184602087016117db565b9190910192915050565b6000835161152f8184602088016117db565b60609390931b6001600160601b0319169190920190815260140192915050565b6001600160a01b0384811682528316602082015260606040820181905260009061157b908301846114d5565b95945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6040815260006115bb6040830185611463565b828103602084015261157b81856114a6565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561167557888303603f19018552815180516001600160a01b031684528781015160808986018190529061162c828701826114a6565b915050878201518582038987015261164482826114a6565b915050606080830151925085820381870152506116618183611463565b9689019694505050908601906001016115f3565b509098975050505050505050565b602081526000610eda60208301846114d5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051608081016001600160401b03811182821017156116ed576116ed61183c565b60405290565b604051601f8201601f191681016001600160401b038111828210171561171b5761171b61183c565b604052919050565b60006001600160401b0382111561173c5761173c61183c565b5060051b60200190565b60006001600160401b0382111561175f5761175f61183c565b50601f01601f191660200190565b6000821982111561178057611780611826565b500190565b6000826117a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156117bf576117bf611826565b500290565b6000828210156117d6576117d6611826565b500390565b60005b838110156117f65781810151838201526020016117de565b83811115611805576000848401525b50505050565b600060001982141561181f5761181f611826565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461186757600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122074f68e8c61f822fb01e0be8086bac87daa0a74e3265a762977e5cad4d216bedb64736f6c63430008040033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c74298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class CollectionStore__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _acceptedToken: string,
    _feeOwner: string,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CollectionStore> {
    return super.deploy(
      _owner,
      _acceptedToken,
      _feeOwner,
      _fee,
      overrides || {}
    ) as Promise<CollectionStore>;
  }
  getDeployTransaction(
    _owner: string,
    _acceptedToken: string,
    _feeOwner: string,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _acceptedToken,
      _feeOwner,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): CollectionStore {
    return super.attach(address) as CollectionStore;
  }
  connect(signer: Signer): CollectionStore__factory {
    return super.connect(signer) as CollectionStore__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionStoreInterface {
    return new utils.Interface(_abi) as CollectionStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectionStore {
    return new Contract(address, _abi, signerOrProvider) as CollectionStore;
  }
}
