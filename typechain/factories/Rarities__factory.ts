/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Rarities, RaritiesInterface } from "../Rarities";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Rarities.Rarity[]",
        name: "_rarities",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Rarities.Rarity",
        name: "_rarity",
        type: "tuple",
      },
    ],
    name: "AddRarity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "UpdatePrice",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Rarities.Rarity[]",
        name: "_rarities",
        type: "tuple[]",
      },
    ],
    name: "addRarities",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rarity",
        type: "string",
      },
    ],
    name: "getRarityByName",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Rarities.Rarity",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rarities",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raritiesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
    ],
    name: "updatePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200235a3803806200235a833981016040819052620000349162000866565b620000876040518060400160405280601081526020016f556e696369616c20526172697469657360801b815250604051806040016040528060018152602001603160f81b8152506200010060201b60201c565b6200009162000191565b6200009c82620001d8565b60005b8151811015620000f757620000e2828281518110620000ce57634e487b7160e01b600052603260045260246000fd5b6020026020010151620002f660201b60201c565b80620000ee8162000aa1565b9150506200009f565b50505062000aeb565b6040518060800160405280604f8152602001620022eb604f913980519060200120828051906020012082805190602001203062000142620004b660201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f1981840301815291905280516020909101206001555050565b60006200019d620004ba565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350916000805160206200233a833981519152908290a350565b620001e2620004ba565b6000546001600160a01b03908116911614620002455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620002ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200023c565b600080546040516001600160a01b03808516939216916000805160206200233a83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80515180158015906200030a575060208111155b620003645760405162461bcd60e51b815260206004820152602360248201527f5261726974696573235f6164645261726974793a20494e56414c49445f4c454e60448201526208ea8960eb1b60648201526084016200023c565b60006200038083600001516200051960201b62000adf1760201c565b80516020918201206000818152600490925260409091205490915015620003fc5760405162461bcd60e51b815260206004820152602960248201527f5261726974696573235f6164645261726974793a205241524954595f414c524560448201526810511657d05111115160ba1b60648201526084016200023c565b600380546001810182556000829052845180518693929092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01916200044c9183916020919091019062000702565b506020828101516001830155604092830151600290920191909155600354600084815260049092529082902055517fa1551daaa553ebc192df9198fc7d3d7e68b02a9be07fc92605cccd0d935d2c0090620004a990859062000958565b60405180910390a1505050565b4690565b6000333014156200051357600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620005169050565b50335b90565b60606000829050600081516001600160401b038111156200054a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801562000575576020820181803683370190505b50905060005b8251811015620006fa57604160f81b838281518110620005ab57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191610801590620005fc5750605a60f81b838281518110620005ea57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191611155b1562000680578281815181106200062357634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b60f81c60206200063f919062000a09565b60f81b8282815181106200066357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350620006e5565b828181518110620006a157634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b828281518110620006cd57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053505b80620006f18162000aa1565b9150506200057b565b509392505050565b828054620007109062000a64565b90600052602060002090601f0160209004810192826200073457600085556200077f565b82601f106200074f57805160ff19168380011785556200077f565b828001600101855582156200077f579182015b828111156200077f57825182559160200191906001019062000762565b506200078d92915062000791565b5090565b5b808211156200078d576000815560010162000792565b600060608284031215620007ba578081fd5b620007c4620009ab565b82519091506001600160401b0380821115620007df57600080fd5b818401915084601f830112620007f457600080fd5b81516020828211156200080b576200080b62000ad5565b6200081f601f8301601f19168201620009d6565b925081835286818386010111156200083657600080fd5b620008478282850183870162000a31565b8285528086015181860152505050506040820151604082015292915050565b6000806040838503121562000879578182fd5b82516001600160a01b038116811462000890578283fd5b602084810151919350906001600160401b0380821115620008af578384fd5b818601915086601f830112620008c3578384fd5b815181811115620008d857620008d862000ad5565b8060051b620008e9858201620009d6565b8281528581019085870183870188018c101562000904578889fd5b8893505b8484101562000946578051868111156200092057898afd5b620009308d8a838b0101620007a8565b8452506001939093019291870191870162000908565b50809750505050505050509250929050565b6020815260008251606060208401528051806080850152620009828160a086016020850162000a31565b6020850151604085810191909152909401516060840152505060a0601f909201601f1916010190565b604051606081016001600160401b0381118282101715620009d057620009d062000ad5565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000a015762000a0162000ad5565b604052919050565b600060ff821660ff84168060ff0382111562000a295762000a2962000abf565b019392505050565b60005b8381101562000a4e57818101518382015260200162000a34565b8381111562000a5e576000848401525b50505050565b600181811c9082168062000a7957607f821691505b6020821081141562000a9b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141562000ab85762000ab862000abf565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6117f08062000afb6000396000f3fe6080604052600436106100975760003560e01c80630c53c51c1461009c57806317b8e1cf146100c55780632d0335ab146100f45780633408e470146101385780635b26f8da1461014b578063715018a61461016d57806389e9c4d3146101825780638da5cb5b14610197578063b5262333146101bf578063f2fde38b146101ec578063f698da251461020c578063fa21cc7b14610222575b600080fd5b6100af6100aa36600461125d565b610242565b6040516100bc9190611512565b60405180910390f35b3480156100d157600080fd5b506100e56100e036600461144b565b61045e565b6040516100bc93929190611547565b34801561010057600080fd5b5061012a61010f366004611243565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100bc565b34801561014457600080fd5b504661012a565b34801561015757600080fd5b5061016b610166366004611350565b610520565b005b34801561017957600080fd5b5061016b6105a7565b34801561018e57600080fd5b5060035461012a565b3480156101a357600080fd5b506000546040516001600160a01b0390911681526020016100bc565b3480156101cb57600080fd5b506101df6101da366004611411565b610614565b6040516100bc91906115a1565b3480156101f857600080fd5b5061016b610207366004611243565b6107af565b34801561021857600080fd5b5061012a60015481565b34801561022e57600080fd5b5061016b61023d3660046112e8565b610892565b60408051606081810183526001600160a01b038816600081815260026020908152908590205484528301529181018690526102808782878787610cb7565b6102f75760405162461bcd60e51b815260206004820152603d60248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60448201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d4154434800000060648201526084015b60405180910390fd5b6001600160a01b03871660009081526002602052604090205461031b906001610d96565b6001600160a01b0388166000908152600260205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061036b90899033908a906114dd565b60405180910390a1600080306001600160a01b031634898b6040516020016103949291906114ab565b60408051601f19818403018152908290526103ae9161148f565b60006040518083038185875af1925050503d80600081146103eb576040519150601f19603f3d011682016040523d82523d6000602084013e6103f0565b606091505b5091509150816104525760405162461bcd60e51b815260206004820152602760248201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60448201526617d1905253115160ca1b60648201526084016102ee565b98975050505050505050565b6003818154811061046e57600080fd5b9060005260206000209060030201600091509050806000018054610491906116d5565b80601f01602080910402602001604051908101604052809291908181526020018280546104bd906116d5565b801561050a5780601f106104df5761010080835404028352916020019161050a565b820191906000526020600020905b8154815290600101906020018083116104ed57829003601f168201915b5050505050908060010154908060020154905083565b610528610da9565b6000546001600160a01b039081169116146105555760405162461bcd60e51b81526004016102ee9061156c565b60005b81518110156105a35761059182828151811061058457634e487b7160e01b600052603260045260246000fd5b6020026020010151610e06565b8061059b81611710565b915050610558565b5050565b6105af610da9565b6000546001600160a01b039081169116146105dc5760405162461bcd60e51b81526004016102ee9061156c565b600080546040516001600160a01b039091169060008051602061179b833981519152908390a3600080546001600160a01b0319169055565b61063860405180606001604052806060815260200160008152602001600081525090565b600061064383610adf565b805160209182012060008181526004909252604090912054909150806106bc5760405162461bcd60e51b815260206004820152602860248201527f52617269746965732367657452617269747942794e616d653a20494e56414c49604482015267445f52415249545960c01b60648201526084016102ee565b60036106c960018361168e565b815481106106e757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201604051806060016040529081600082018054610710906116d5565b80601f016020809104026020016040519081016040528092919081815260200182805461073c906116d5565b80156107895780601f1061075e57610100808354040283529160200191610789565b820191906000526020600020905b81548152906001019060200180831161076c57829003601f168201915b505050505081526020016001820154815260200160028201548152505092505050919050565b6107b7610da9565b6000546001600160a01b039081169116146107e45760405162461bcd60e51b81526004016102ee9061156c565b6001600160a01b0381166108495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ee565b600080546040516001600160a01b038085169392169160008051602061179b83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b61089a610da9565b6000546001600160a01b039081169116146108c75760405162461bcd60e51b81526004016102ee9061156c565b8281146109255760405162461bcd60e51b815260206004820152602660248201527f5261726974696573237570646174655072696365733a204c454e4754485f4d496044820152650a69a82a886960d31b60648201526084016102ee565b60005b83811015610ad857600085858381811061095257634e487b7160e01b600052603260045260246000fd5b905060200281019061096491906115dd565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394508792508691508590508181106109bd57634e487b7160e01b600052603260045260246000fd5b90506020020135905060006109d183610adf565b80516020918201206000818152600490925260409091205490915080610a475760405162461bcd60e51b815260206004820152602560248201527f5261726974696573237570646174655072696365733a20494e56414c49445f52604482015264415249545960d81b60648201526084016102ee565b826003610a5560018461168e565b81548110610a7357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201819055507f05b0e3546b37c788d01ccb3d1c8a6329795f32a6b78cb3bfe6782bd86d0e26fe8484604051610ab9929190611525565b60405180910390a1505050508080610ad090611710565b915050610928565b5050505050565b60606000829050600081516001600160401b03811115610b0f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b39576020820181803683370190505b50905060005b8251811015610caf57604160f81b838281518110610b6d57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191610801590610bbc5750605a60f81b838281518110610baa57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191611155b15610c3a57828181518110610be157634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b60f81c6020610bfb9190611669565b60f81b828281518110610c1e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c9d565b828181518110610c5a57634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b828281518110610c8557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053505b80610ca781611710565b915050610b3f565b509392505050565b60006001600160a01b038616610d0c5760405162461bcd60e51b815260206004820152601a6024820152792726aa11bb32b934b33c9d1024a72b20a624a22fa9a4a3a722a960311b60448201526064016102ee565b6001610d1f610d1a87610fb0565b61102d565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610d6d573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000610da28284611651565b9392505050565b600033301415610e0057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610e039050565b50335b90565b8051518015801590610e19575060208111155b610e715760405162461bcd60e51b815260206004820152602360248201527f5261726974696573235f6164645261726974793a20494e56414c49445f4c454e60448201526208ea8960eb1b60648201526084016102ee565b6000610e808360000151610adf565b80516020918201206000818152600490925260409091205490915015610efa5760405162461bcd60e51b815260206004820152602960248201527f5261726974696573235f6164645261726974793a205241524954595f414c524560448201526810511657d05111115160ba1b60648201526084016102ee565b600380546001810182556000829052845180518693929092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0191610f4891839160209190910190611058565b506020828101516001830155604092830151600290920191909155600354600084815260049092529082902055517fa1551daaa553ebc192df9198fc7d3d7e68b02a9be07fc92605cccd0d935d2c0090610fa39085906115a1565b60405180910390a1505050565b60006040518060800160405280604381526020016117586043913980516020918201208351848301516040808701518051908601209051611010950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60015460405161190160f01b6020820152602281019190915260428101829052600090606201611010565b828054611064906116d5565b90600052602060002090601f01602090048101928261108657600085556110cc565b82601f1061109f57805160ff19168380011785556110cc565b828001600101855582156110cc579182015b828111156110cc5782518255916020019190600101906110b1565b506110d89291506110dc565b5090565b5b808211156110d857600081556001016110dd565b60006001600160401b0383111561110a5761110a611741565b61111d601f8401601f1916602001611621565b905082815283838301111561113157600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461115f57600080fd5b919050565b60008083601f840112611175578182fd5b5081356001600160401b0381111561118b578182fd5b6020830191508360208260051b85010111156111a657600080fd5b9250929050565b600082601f8301126111bd578081fd5b610da2838335602085016110f1565b6000606082840312156111dd578081fd5b604051606081016001600160401b03808211838310171561120057611200611741565b81604052829350843591508082111561121857600080fd5b50611225858286016111ad565b82525060208301356020820152604083013560408201525092915050565b600060208284031215611254578081fd5b610da282611148565b600080600080600060a08688031215611274578081fd5b61127d86611148565b945060208601356001600160401b03811115611297578182fd5b8601601f810188136112a7578182fd5b6112b6888235602084016110f1565b9450506040860135925060608601359150608086013560ff811681146112da578182fd5b809150509295509295909350565b600080600080604085870312156112fd578384fd5b84356001600160401b0380821115611313578586fd5b61131f88838901611164565b90965094506020870135915080821115611337578384fd5b5061134487828801611164565b95989497509550505050565b60006020808385031215611362578182fd5b82356001600160401b0380821115611378578384fd5b818501915085601f83011261138b578384fd5b81358181111561139d5761139d611741565b8060051b6113ac858201611621565b8281528581019085870183870188018b10156113c6578889fd5b8893505b84841015611403578035868111156113e057898afd5b6113ee8c8a838b01016111cc565b845250600193909301929187019187016113ca565b509998505050505050505050565b600060208284031215611422578081fd5b81356001600160401b03811115611437578182fd5b611443848285016111ad565b949350505050565b60006020828403121561145c578081fd5b5035919050565b6000815180845261147b8160208601602086016116a5565b601f01601f19169290920160200192915050565b600082516114a18184602087016116a5565b9190910192915050565b600083516114bd8184602088016116a5565b60609390931b6001600160601b0319169190920190815260140192915050565b6001600160a01b0384811682528316602082015260606040820181905260009061150990830184611463565b95945050505050565b602081526000610da26020830184611463565b6040815260006115386040830185611463565b90508260208301529392505050565b60608152600061155a6060830186611463565b60208301949094525060400152919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260008251606060208401526115bd6080840182611463565b905060208401516040840152604084015160608401528091505092915050565b6000808335601e198436030181126115f3578283fd5b8301803591506001600160401b0382111561160c578283fd5b6020019150368190038213156111a657600080fd5b604051601f8201601f191681016001600160401b038111828210171561164957611649611741565b604052919050565b600082198211156116645761166461172b565b500190565b600060ff821660ff84168060ff038211156116865761168661172b565b019392505050565b6000828210156116a0576116a061172b565b500390565b60005b838110156116c05781810151838201526020016116a8565b838111156116cf576000848401525b50505050565b600181811c908216806116e957607f821691505b6020821081141561170a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117245761172461172b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122058c69ca17ed6ede5213488d5819498c8e6e565b172abdc3c3015c76e6849c5fc64736f6c63430008040033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c74298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class Rarities__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _rarities: { name: string; maxSupply: BigNumberish; price: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Rarities> {
    return super.deploy(
      _owner,
      _rarities,
      overrides || {}
    ) as Promise<Rarities>;
  }
  getDeployTransaction(
    _owner: string,
    _rarities: { name: string; maxSupply: BigNumberish; price: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _rarities, overrides || {});
  }
  attach(address: string): Rarities {
    return super.attach(address) as Rarities;
  }
  connect(signer: Signer): Rarities__factory {
    return super.connect(signer) as Rarities__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaritiesInterface {
    return new utils.Interface(_abi) as RaritiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Rarities {
    return new Contract(address, _abi, signerOrProvider) as Rarities;
  }
}
